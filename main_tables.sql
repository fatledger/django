create table app.ADDRESS_TYPE
(ADDRESS_TYPE  VARCHAR(16) constraint pk_addr_type primary key,
 DESCRIPTION   VARCHAR(200)
);

create table app.ADDRESS_VERIFICATION
(BASKET_ID             NUMERIC NOT NULL,
 BASKET_ADDRESS_ID     NUMERIC(10) NOT NULL,
 VERIFY_DATE           DATE NOT NULL,
 DAV_CODE              VARCHAR(10),
 DAV_EXPLANATION       VARCHAR(10),
 CREATED_BY            VARCHAR(50),
 CREATE_DATE           DATE,
 CHANGED_BY            VARCHAR(50),
 CHANGE_DATE           DATE
);

create table app.BASKET
(BASKET_ID                     SERIAL PRIMARY KEY,
 CUSTOMER_GUID                 VARCHAR(60) NOT NULL,
 BASKET_STATUS                 VARCHAR(30),
 BASKET_START_DATE             DATE,
 BASKET_COMPLETE_DATE          DATE,
 TOTAL                         NUMERIC(15,2),
 TAX                           NUMERIC(15,2),
 SUBTOTAL                      NUMERIC(15,2),
 DISCOUNT_PAYMENT_AMOUNT       NUMERIC(15,2),
 DISCOUNT_OTHER_AMOUNT         NUMERIC(15,2),
 DISCOUNT_OTHER_CODE           VARCHAR(50),
 SOURCE_CODE                   VARCHAR(50),
 CUSTOMER_ID                   NUMERIC NOT NULL,
 CUSTOMER_ADDRESS_ID           NUMERIC,
 CUSTOMER_NOTES                VARCHAR(255),
 SERVICE_NOTES                 VARCHAR(316),
 CUSTOMER_REP_ID               NUMERIC,
 PRIMARY_CONTACT_METHOD        VARCHAR(20),
 PROMISE_DATE                  DATE,
 CREATED_BY                    VARCHAR(50),
 CREATE_DATE                   DATE,
 CHANGED_BY                    VARCHAR(50),
 CHANGE_DATE                   DATE,
 SHIPPING_TOTAL                NUMERIC(15,2),
 ORDER_TYPE                    VARCHAR(50),
 AMOUNT_CREDITED               NUMERIC(15,2),
 TOTAL_ADJUSTMENT              NUMERIC(15,2),
 FRAUD_STATUS                  VARCHAR(100),
 CUSTOMER_SUBMIT_DATE          DATE,
 ESTIMATED_SHIP_DATE           DATE,
 ESTIMATED_ARRIVAL_DATE        DATE,
 OUTSIDE_ASSEMBLY_CUTOFF_DATE  DATE,
 SITE                          VARCHAR(20) NOT NULL,
 CURRENCY_CODE                 VARCHAR(3) NOT NULL,
 BROWSER_TIMEZONE_OFFSET       NUMERIC,
 INSURANCE_FEE_AMOUNT          NUMERIC(15,2),
 IS_INSURANCE_FEE_WAIVED       NUMERIC(1) NOT NULL,
 SHIP_TO_COUNTRY_CODE          VARCHAR(3),
 CUSTOMER_LANGUAGE_CODE        VARCHAR(50),
 USER_AGENT                    VARCHAR(500),
 SHARED_BASKET_STATUS          VARCHAR(20)
);


create table app.BASKET_DISCOUNT
(BASKET_ID              NUMERIC NOT NULL,
 SOURCE_CODE            VARCHAR(50) NOT NULL,
 BASKET_ITEM_ID         NUMERIC,
 DISCOUNT_AMOUNT        NUMERIC(15,2),
 NOTE                   VARCHAR(1000),
 APPROVED_BY_USERNAME   VARCHAR(50),
 APPROVAL_DATE          DATE,
 CREATED_BY             VARCHAR(50),
 CREATE_DATE            DATE,
 CHANGED_BY             VARCHAR(50),
 CHANGE_DATE            DATE,
 DISCOUNT_AMOUNT_LOG    NUMERIC(19,5)
);

create table app.BASKET_EVENT
(BASKET_EVENT_ID     SERIAL PRIMARY KEY,
 BASKET_ID           NUMERIC NOT NULL,
 EVENT_NAME          VARCHAR(36),
 NOTES               VARCHAR(3000) NOT NULL,
 CREATED_BY          VARCHAR(50),
 CREATE_DATE         DATE,
 CHANGED_BY          VARCHAR(50),
 CHANGE_DATE         DATE
);

create table app.BASKET_ITEM
(BASKET_ITEM_ID              SERIAL PRIMARY KEY,
 BASKET_ID                   NUMERIC NOT NULL,
 SKU                         VARCHAR(40),
 OFFER_ID                    NUMERIC(10),
 DESCRIPTION                 VARCHAR(255),
 QUANTITY                    NUMERIC(10),
 ORIGINAL_PRICE              NUMERIC(15,2) NOT NULL,
 PURCHASE_PRICE              NUMERIC(15,2) NOT NULL,
 TAX                         NUMERIC(15,2),
 SHIPPING_CHARGE             NUMERIC(15,2),
 DISCOUNT_CODE               VARCHAR(24),
 IS_TAXABLE                  NUMERIC(1) NOT NULL,
 LINE_TOTAL                  NUMERIC(19,5) NOT NULL,
 NOTE                        VARCHAR(255),
 PRODUCT_TYPE                VARCHAR(20),
 PROMISE_DATE                DATE,
 PARENT_ITEM_ID              NUMERIC(10),
 IS_DROP_SHIP                NUMERIC(1),
 IS_GIFT                     NUMERIC(1),
 CREATED_BY                  VARCHAR(50),
 CREATE_DATE                 DATE,
 CHANGED_BY                  VARCHAR(50),
 CHANGE_DATE                 DATE,
 PROMISE_QUANTITY            NUMERIC,
 PROMISE_BY                  VARCHAR(50),
 PROMISE_EXPIRE_DATE         DATE,
 ENGRAVING_FONT              VARCHAR(30),
 ENGRAVING_TEXT              VARCHAR(300),
 ENGRAVING_STYLE             VARCHAR(30),
 ENGRAVING_LAYOUT            VARCHAR(30),
 BUILT_BY_SOURCE_CODE        VARCHAR(50),
 SETTING_POSITION            VARCHAR(50),
 DEFAULT_IS_DROP_SHIP        NUMERIC,
 ASSEMBLER_VENDOR_ID         NUMERIC(10),
 TAX_RATE                    NUMERIC(10,5),
 TAX_RATE_DATE               DATE,
 SITE                        VARCHAR(20),
 COUNTRY_OF_ORIGIN           VARCHAR(40),
 COO_DATE                    DATE,
 IS_DISCOUNTABLE             NUMERIC,
 IS_INSURABLE                NUMERIC,
 ENGRAVED_ITEM_ID            NUMERIC(10),
 VENDOR_LOCATION_ID          NUMERIC(10),
 VENDOR_SOURCE_TYPE          VARCHAR(30),
 USER_AGENT                  VARCHAR(500),
 CUSTOMER_GUID               VARCHAR(60),
 MERGE_DATE                  DATE,
 MERGED_BY                   VARCHAR(50)
);

create table app.BASKET_ITEM_IMAGE_URL
(BASKET_ID        NUMERIC,
 BASKET_ITEM_ID   NUMERIC,
 IMAGE_URL        VARCHAR(500),
 CREATE_DATE      DATE,
 CREATED_BY       VARCHAR(80),
 CHANGE_DATE      DATE,
 CHANGED_BY       VARCHAR(80)
);

create table app.BASKET_ITEM_RETURN
(BASKET_ITEM_RETURN_ID      SERIAL PRIMARY KEY,
 BASKET_ID                  NUMERIC,
 BASKET_ITEM_ID             NUMERIC,
 RETURN_QUANTITY            NUMERIC,
 RETURN_PRICE               NUMERIC(15,2),
 IS_DGR_RETURN              NUMERIC(1),
 CREATED_BY                 VARCHAR(50),
 CREATE_DATE                DATE,
 CHANGED_BY                 VARCHAR(50),
 CHANGE_DATE                DATE,
 RMA_NUMERIC                NUMERIC,
 NEW_BASKET_ID              NUMERIC,
 NEW_BASKET_ITEM_ID         NUMERIC,
 RETURN_REASON              VARCHAR(50),
 NOTES                      VARCHAR(1000),
 SHIP_FROM_HARMONIZED_CODE  VARCHAR(40)
);

create table app.BASKET_ITEM_RETURN_CHARGE
(BASKET_ID              NUMERIC,
 CHARGE_NAME            VARCHAR(20),
 BASKET_ITEM_RETURN_ID  NUMERIC,
 CHARGE_AMOUNT          NUMERIC(18,5),
 IS_CHARGE_CREDITED     NUMERIC(1),
 CREATED_BY             VARCHAR(50),
 CREATE_DATE            DATE,
 CHANGED_BY             VARCHAR(50),
 CHANGE_DATE            DATE,
 RMA_NUMERIC             NUMERIC
);

create table app.BASKET_NOTE
(BASKET_ID       NUMERIC NOT NULL,
 BASKET_NOTE_ID  NUMERIC NOT NULL,
 NOTE_NAME       VARCHAR(50),
 NOTE            VARCHAR(2000),
 CREATED_BY      VARCHAR(50),
 CREATE_DATE     DATE,
 CHANGED_BY      VARCHAR(50),
 CHANGE_DATE     DATE
);

create table app.BASKET_ORIGINAL_DISCOUNT
(BASKET_ID          NUMERIC NOT NULL,
 SOURCE_CODE        VARCHAR(50) NOT NULL,
 DISCOUNT_AMOUNT    NUMERIC(19,5) NOT NULL,
 BASKET_ITEM_ID     NUMERIC,
 SKU                VARCHAR(40),
 CREATED_BY         VARCHAR(50),
 CREATE_DATE        DATE
);

create table app.BASKET_RETURN
(BASKET_ID                    NUMERIC NOT NULL,
 RETURN_TYPE                  VARCHAR(50) NOT NULL,
 RETURN_STATUS                VARCHAR(50),
 RETURN_STATUS_DATE           DATE,
 RETURN_REASON                VARCHAR(50),
 EXPECTED_RETURN_DATE         DATE,
 RMA_NUMERIC                   NUMERIC,
 NOTE                         VARCHAR(1000),
 NEW_BASKET_ID                NUMERIC,
 CREDIT_ADJUSTMENT            NUMERIC,
 ADJUSTMENT_TYPE              VARCHAR(100),
 ADJUSTMENT_NOTE              VARCHAR(500),
 ADJUSTMENT_APPROVED_BY       VARCHAR(50),
 ADJUSTMENT_APPROVAL_DATE     DATE,
 CREATED_BY                   VARCHAR(50),
 CREATE_DATE                  DATE,
 CHANGED_BY                   VARCHAR(50),
 CHANGE_DATE                  DATE,
 SHIP_METHOD_ID               NUMERIC(10),
 SHIPPING_TOTAL               NUMERIC(15,2),
 CUSTOMER_ID                  NUMERIC,
 IS_GIFT_RETURN               NUMERIC(1),
 RECEIVABLE_TRANSACTION_DATE  DATE,
 RETURN_FROM_COUNTRY_CODE     VARCHAR(3)
);

create table app.BASKET_STATUS
(BASKET_STATUS            VARCHAR(30) NOT NULL,
 DISPLAY_NAME             VARCHAR(30),
 DESCRIPTION              VARCHAR(200),
 BASKET_STATUS_CATEGORY   VARCHAR(20),
 CREATED_BY               VARCHAR(50),
 CREATE_DATE              DATE,
 CHANGED_BY               VARCHAR(50),
 CHANGE_DATE              DATE
);

create table app.BASKET_STATUS_EVENT
(BASKET_ID            NUMERIC NOT NULL,
 FROM_BASKET_STATUS   VARCHAR(30),
 TO_BASKET_STATUS     VARCHAR(30),
 CREATED_BY           VARCHAR(50),
 CREATE_DATE          DATE
);

create table app.CHARGE_SETTLEMENT_EVENT
(BASKET_ID                    NUMERIC NOT NULL,
 PAYMENT_ID                   NUMERIC NOT NULL,
 SETTLEMENT_EVENT_ID          NUMERIC NOT NULL,
 SETTLEMENT_TXN_TYPE          VARCHAR(50) NOT NULL,
 IS_SUCCESS                   NUMERIC(1) NOT NULL,
 CHARGE_AMOUNT                NUMERIC(15,2),
 CHARGE_TIME                  DATE,
 TXN_REQUEST_ID               VARCHAR(300),
 TXN_AMOUNT                   NUMERIC(15,2),
 TXN_TIME                     DATE,
 TXN_RETURN_CODE              NUMERIC,
 TXN_RETURN_FLAG              VARCHAR(30),
 TXN_RETURN_MESSAGE           VARCHAR(300),
 TXN_RESPONSE                 VARCHAR(300),
 AVS_FLAG                     VARCHAR(30),
 AUTH_CODE                    VARCHAR(50),
 ICS_RETURN_CODE              NUMERIC,
 ICS_RETURN_FLAG              VARCHAR(30),
 ICS_RETURN_MESSAGE           VARCHAR(300),
 CREATED_BY                   VARCHAR(50),
 CREATE_DATE                  DATE,
 CHANGED_BY                   VARCHAR(50),
 CHANGE_DATE                  DATE,
 AUTH_CV_RESULT               VARCHAR(16),
 PROVIDER_NAME                VARCHAR(200),
 RAW_CV_RESULT                VARCHAR(100),
 RAW_AVS_RESULT               VARCHAR(100),
 TXN_REQUEST_TOKEN            VARCHAR(300),
 TXN_PROCESSOR_RESPONSE       VARCHAR(100),
 TXN_CURRENCY_CODE            VARCHAR(10),
 CURRENCY_CODE                VARCHAR(10)
);

create table app.CHARGE_SETTLEMENT_TXN_TYPE
(SETTLEMENT_TXN_TYPE  VARCHAR(50) NOT NULL,
 DESCRIPTION          VARCHAR(200),
 CREATED_BY           VARCHAR(50),
 CREATE_DATE          DATE,
 CHANGED_BY           VARCHAR(50),
 CHANGE_DATE          DATE
);

create table app.COUNTRY
(COUNTRY_CODE           VARCHAR(3) NOT NULL,
 COUNTRY_NAME           VARCHAR(200) NOT NULL,
 COUNTRY_NUMERIC         NUMERIC(3) NOT NULL,
 CURRENCY_CODE          VARCHAR(3),
 CURRENCY_NAME          VARCHAR(200),
 TOP_LEVEL_DOMAIN       VARCHAR(2),
 COUNTRY_CODE_ALPHA2    VARCHAR(2),
 CREATED_BY             VARCHAR(50) NOT NULL,
 CREATE_DATE            DATE NOT NULL,
 CHANGED_BY             VARCHAR(50) NOT NULL,
 CHANGE_DATE            DATE NOT NULL,
 BN_GEOGRAPHICAL_GROUP  VARCHAR(100),
 IS_INTERNAL_BILL_TO    NUMERIC,
 IS_EXTERNAL_BILL_TO    NUMERIC,
 DISPLAY_CODE           VARCHAR(2)
);

create table app.CURRENCY
(CURRENCY_CODE            VARCHAR(3) NOT NULL,
 CURRENCY_NAME            VARCHAR(400) NOT NULL,
 CREATED_BY               VARCHAR(50) NOT NULL,
 CREATE_DATE              DATE NOT NULL,
 CHANGED_BY               VARCHAR(50) NOT NULL,
 CHANGE_DATE              DATE NOT NULL,
 ISO_4217_NUMERIC_CODE    VARCHAR(3),
 DISPLAY_SYMBOL           VARCHAR(20),
 PRICE_ROUNDING_SCALE     NUMERIC(10,2),
 BASKET_ROUNDING_SCALE    NUMERIC(10,2)
);

create table app.CURRENCY_EXCHANGE_DAILY
(CURRENCY_CODE_FROM        VARCHAR(15),
 CURRENCY_CODE_TO          VARCHAR(15),
 CONVERSION_DAY            DATE,
 CONVERSION_RATE           NUMERIC,
 LAST_ORACLE_CHANGE_DATE   DATE,
 LOAD_DATE                 DATE
);

create table app.CURRENCY_EXCHANGE_RATE
(CURRENCY_CODE_FROM     VARCHAR(3) NOT NULL,
 CURRENCY_CODE_TO       VARCHAR(3) NOT NULL,
 FIRST_ACTIVE_DATE      DATE NOT NULL,
 LAST_ACTIVE_DATE       DATE NOT NULL,
 EXCHANGE_RATE          NUMERIC(10,7) NOT NULL,
 CREATED_BY             VARCHAR(50) NOT NULL,
 CREATE_DATE            DATE NOT NULL,
 CHANGED_BY             VARCHAR(50) NOT NULL,
 CHANGE_DATE            DATE
);

create table app.CUSTOMER
(CUSTOMER_ID                  SERIAL PRIMARY KEY,
 LOGIN_NAME                   VARCHAR(60),
 LOGIN_PASSWORD               VARCHAR(60),
 LAST_NAME                    VARCHAR(60),
 FIRST_NAME                   VARCHAR(79),
 MIDDLE_NAME                  VARCHAR(60),
 GENDER                       VARCHAR(1),
 PREFERRED_CONTACT_METHOD     VARCHAR(20),
 BIRTHDAY                     VARCHAR(20),
 SHARED_SECRET                VARCHAR(60),
 FIRST_LOGIN_DATE             DATE,
 MOST_RECENT_LOGIN_DATE       DATE,
 LOGIN_EXPIRATION_DATE        DATE,
 CREATED_BY                   VARCHAR(50),
 CREATE_DATE                  DATE,
 CHANGED_BY                   VARCHAR(50),
 CHANGE_DATE                  DATE,
 IS_BUYER                     NUMERIC(1) NOT NULL,
 FAVORITE_ITEM_ALERT_FREQ     VARCHAR(20),
 FAVORITE_ITEM_BASKET_ID      NUMERIC,
 SITE                         VARCHAR(20),
 SECURITY_SERIES_ID           VARCHAR(64),
 SECURITY_TOKEN_ID            VARCHAR(64),
 TOKEN_LAST_USED_DATE         DATE
);

create table app.CUSTOMER_ADDRESS
(CUSTOMER_ADDRESS_ID     SERIAL PRIMARY KEY,
 CUSTOMER_ID             NUMERIC,
 STREET_1                VARCHAR(196),
 STREET_2                VARCHAR(122),
 STREET_3                VARCHAR(100),
 STREET_4                VARCHAR(100),
 CITY                    VARCHAR(122),
 STATE                   VARCHAR(59),
 ZIP                     VARCHAR(20),
 COUNTRY                 VARCHAR(50),
 PHONE_NUMERIC           VARCHAR(30),
 FAX_NUMERIC             VARCHAR(30),
 IS_FRAUD                NUMERIC(1),
 SUBSCRIBE_STATUS        VARCHAR(10),
 UNDELIVERABLE_DATE      DATE,
 CREATED_BY              VARCHAR(50),
 CREATE_DATE             DATE,
 CHANGED_BY              VARCHAR(50),
 CHANGE_DATE             DATE,
 IS_NEVER_SEND           NUMERIC(1)
);

create table app.CUSTOMER_CREDIT_CARD
(CREDIT_CARD_ID             SERIAL PRIMARY KEY,
 CUSTOMER_ID                NUMERIC NOT NULL,
 ADDRESS_ID                 NUMERIC,
 ENCRYPTED_NUMERIC          BYTEA,
 TYPE                       VARCHAR(20),
 EXPIRATION_YEAR            NUMERIC(4),
 EXPIRATION_MONTH           NUMERIC(2),
 NUMERIC_LAST_4             VARCHAR(4),
 ENCRYPTION_DATE            DATE,
 IS_DEFAULT_FAST_TRACK_CC   NUMERIC(1),
 CREATED_BY                 VARCHAR(50),
 CREATE_DATE                DATE,
 CHANGED_BY                 VARCHAR(50),
 CHANGE_DATE                DATE,
 CREDIT_CARD_NUMERIC        VARCHAR(24),
 CREDIT_LIMIT               VARCHAR(12)
);

create table app.CUSTOMER_EMAIL_ADDRESS
(CUSTOMER_ID     NUMERIC NOT NULL,
 EMAIL_ADDRESS   VARCHAR(200) NOT NULL,
 CREATED_BY      VARCHAR(50),
 CREATE_DATE     DATE,
 CHANGED_BY      VARCHAR(50),
 CHANGE_DATE     DATE
);

create table app.CUSTOMER_EVENT
(EVENT_ID        SERIAL PRIMARY KEY, 
 CUSTOMER_ID     NUMERIC NOT NULL,
 EVENT_TYPE      VARCHAR(50) NOT NULL,
 NOTE            VARCHAR(600),
 BASKET_ID       NUMERIC,
 EMAIL_ADDRESS   VARCHAR(200),
 CREATED_BY      VARCHAR(50),
 CREATE_DATE     DATE,
 CHANGED_BY      VARCHAR(50),
 CHANGE_DATE     DATE,
 CUSTOMER_GUID   VARCHAR(100)
);

create table app.CUSTOMER_EVENT_TYPE
(EVENT_TYPE    VARCHAR(50) NOT NULL,
 DESCRIPTION   VARCHAR(200),
 CREATED_BY    VARCHAR(50),
 CREATE_DATE   DATE,
 CHANGED_BY    VARCHAR(50),
 CHANGE_DATE   DATE
);

create table app.CUSTOMER_GUID
(CUSTOMER_ID     NUMERIC NOT NULL,
 CUSTOMER_GUID   VARCHAR(100) NOT NULL,
 CREATED_BY      VARCHAR(50),
 CREATE_DATE     DATE,
 CHANGED_BY      VARCHAR(50),
 CHANGE_DATE     DATE
);

create table app.CUSTOMER_PHONE
(CUSTOMER_ID           NUMERIC NOT NULL,
 CUSTOMER_ADDRESS_ID   NUMERIC NOT NULL,
 PHONE_NUMERIC          VARCHAR(30) NOT NULL,
 PHONE_TYPE            VARCHAR(50),
 CREATED_BY            VARCHAR(50),
 CREATE_DATE           DATE,
 CHANGED_BY            VARCHAR(50),
 CHANGE_DATE           DATE
);

create table app.CUSTOMER_PROFILE
(BASKET_ID               NUMERIC NOT NULL,
 CUSTOMER_GENDER         VARCHAR(20),
 IS_MARRIED              NUMERIC(1),
 ANNIVERSARY             DATE,
 SIGNIFICANT_OTHER_BDAY  DATE,
 IS_ENGAGEMENT_PLANNED   NUMERIC(1),
 MARKETING_VEHICLE_NAME  VARCHAR(50),
 CREATED_BY              VARCHAR(50),
 CREATE_DATE             DATE,
 CHANGED_BY              VARCHAR(50),
 CHANGE_DATE             DATE,
 WEDDING_DATE            DATE,
 MARITAL_STATUS          VARCHAR(20),
 PURCHASE_REASON         VARCHAR(40),
 FIANCEE_NAME            VARCHAR(100),
 FIANCEE_EMAIL           VARCHAR(100),
 CUSTOMER_ID             NUMERIC
);

create table app.DISCOUNT
(DISCOUNT_NAME               VARCHAR(50) NOT NULL,
 DESCRIPTION                 VARCHAR(200),
 IS_DISCOUNT_CALCULATED      NUMERIC(1),
 CREATED_BY                  VARCHAR(50),
 CREATE_DATE                 DATE,
 CHANGED_BY                  VARCHAR(50),
 CHANGE_DATE                 DATE,
 DISCOUNT_LEVEL_CODE         VARCHAR(10),
 APPLICATION_MODE            VARCHAR(20),
 AFFILIATE_RESTRICTION_TYPE  VARCHAR(32) NOT NULL,
 IS_INCLUDE_LOOSE_DIAM       NUMERIC(1) NOT NULL,
 IS_INCLUDE_NON_LOOSE_DIAM   NUMERIC(1) NOT NULL,
 IS_INCLUDE_SETTING          NUMERIC(1) NOT NULL,
 IS_USER_SELECTABLE          NUMERIC(1) NOT NULL,
 DISCOUNT_STATUS             VARCHAR(20) NOT NULL,
 IS_INCLUDE_WATCH            NUMERIC
);

create table app.DISCOUNT_TIER
(DISCOUNT_NAME      VARCHAR(50) NOT NULL,
 MIN_TOTAL          NUMERIC(15,2) NOT NULL,
 DISCOUNT_PERCENT   NUMERIC,
 DISCOUNT_AMOUNT    NUMERIC(15,2),
 CREATED_BY         VARCHAR(50),
 CREATE_DATE        DATE,
 CHANGED_BY         VARCHAR(50),
 CHANGE_DATE        DATE
);

create table app.EMAIL
(EMAIL_ID            SERIAL PRIMARY KEY,
 EMAIL_TYPE          VARCHAR(30) NOT NULL,
 SENDER              VARCHAR(200),
 RECIPIENT           VARCHAR(200),
 REPLY_TO            VARCHAR(200),
 ERRORS_TO           VARCHAR(200),
 CC                  VARCHAR(200),
 BCC                 VARCHAR(200),
 ALIAS               VARCHAR(200),
 SUBJECT             VARCHAR(100),
 EMAIL_TEXT          TEXT,
 BASKET_ID           NUMERIC,
 EMAIL_STATUS        VARCHAR(30) NOT NULL,
 EMAIL_STATUS_DATE   DATE NOT NULL,
 EMAIL_LOCK_ID       NUMERIC,
 CREATED_BY          VARCHAR(50) NOT NULL,
 CREATE_DATE         DATE NOT NULL,
 CHANGED_BY          VARCHAR(50),
 CHANGE_DATE         DATE,
 MIME_TYPE           VARCHAR(30),
 RMA_NUMERIC          NUMERIC
);

create table app.EMAIL_ADDRESS
(EMAIL_ADDRESS                VARCHAR(200) NOT NULL,
 SUBSCRIBE_STATUS             VARCHAR(10) NOT NULL,
 HTML_ENABLED_STATUS          VARCHAR(10),
 UNDELIVERABLE_DATE           DATE,
 IS_FRAUD                     NUMERIC(1) NOT NULL,
 IS_NEVER_SEND                NUMERIC(1) NOT NULL,
 IS_BAD_ADDRESS               NUMERIC(1) NOT NULL,
 CREATED_BY                   VARCHAR(50),
 CREATE_DATE                  DATE,
 CHANGED_BY                   VARCHAR(50),
 CHANGE_DATE                  DATE,
 IS_NEW_CUSTOMER_OPTED_IN     NUMERIC(1) NOT NULL,
 IS_NEW_CUSTOMER_CODE_ISSUED  NUMERIC(1) NOT NULL,
 LAST_NAME                    VARCHAR(74),
 FIRST_NAME                   VARCHAR(50),
 MIDDLE_NAME                  VARCHAR(50)
);

create table app.EMAIL_TYPE
(EMAIL_TYPE        VARCHAR(30) NOT NULL,
 CHANGE_DATE       DATE,
 DESCRIPTION       VARCHAR(200),
 CREATED_BY        VARCHAR(50),
 CREATE_DATE       DATE,
 CHANGED_BY        VARCHAR(50),
 MAX_ALLOWABLE     NUMERIC NOT NULL
);

create table app.GIFT_CERTIFICATE
(GIFT_CERTIFICATE_ID          SERIAL PRIMARY KEY,
 ORIGINAL_VALUE               NUMERIC NOT NULL,
 CURRENT_VALUE                NUMERIC NOT NULL,
 SENDER_NAME                  VARCHAR(100),
 RECIPIENT_NAME               VARCHAR(100),
 RECIPIENT_EMAIL              VARCHAR(200),
 MESSAGE_BODY                 VARCHAR(1000),
 MESSAGE_TO                   VARCHAR(100),
 MESSAGE_FROM                 VARCHAR(100),
 DISTRIBUTOR_NAME             VARCHAR(100),
 ACTIVATED_DATE               DATE,
 INACTIVATED_DATE             DATE,
 EXPIRATION_DATE              DATE,
 IS_ACTIVE                    NUMERIC(1) NOT NULL,
 GIFT_CERTIFICATE_TYPE        VARCHAR(50) NOT NULL,
 GIFT_CERTIFICATE_STATUS      VARCHAR(50),
 GIFT_CERTIFICATE_REASON      VARCHAR(1000),
 CREATED_BY                   VARCHAR(50),
 CREATE_DATE                  DATE,
 CHANGED_BY                   VARCHAR(50),
 CHANGE_DATE                  DATE
);

create table app.GIFT_CERTIFICATE_EVENT
(GIFT_CERTIFICATE_EVENT_ID    SERIAL PRIMARY KEY,
 GIFT_CERTIFICATE_ID          VARCHAR(25) NOT NULL,
 EVENT_NAME                   VARCHAR(50),
 EVENT_NOTES                  VARCHAR(2000),
 CREATED_BY                   VARCHAR(50),
 CREATE_DATE                  DATE
);

create table app.ORDER_TYPE
(ORDER_TYPE                VARCHAR(50) NOT NULL,
 DESCRIPTION               VARCHAR(200),
 DISPLAY_NAME              VARCHAR(50),
 CREATED_BY                VARCHAR(50),
 CREATE_DATE               DATE,
 CHANGED_BY                VARCHAR(50),
 CHANGE_DATE               DATE,
 ALLOW_CONFIRMATION_EMAIL  NUMERIC(1) NOT NULL
);

create table app.PAYMENT
(PAYMENT_ID                  SERIAL PRIMARY KEY,
 BASKET_ID                   NUMERIC NOT NULL,
 PAYMENT_METHOD              VARCHAR(24) NOT NULL,
 PAYMENT_STATUS              VARCHAR(50),
 PAYMENT_STATUS_DATE         DATE,
 NAME                        VARCHAR(74),
 AMOUNT                      NUMERIC(15,2) NOT NULL,
 IS_ACTIVE                   NUMERIC(1) NOT NULL,
 BILL_TO_ADDRESS_ID          NUMERIC(10) NOT NULL,
 CREATED_BY                  VARCHAR(50),
 CREATE_DATE                 DATE,
 CHANGED_BY                  VARCHAR(50),
 CHANGE_DATE                 DATE,
 IS_CREDIT                   NUMERIC(1) NOT NULL,
 CREDITED_BASKET_ID          NUMERIC,
 CREDITED_PAYMENT_ID         NUMERIC,
 RETURN_BASKET_ID            NUMERIC,
 RETURN_RMA_NUMERIC          NUMERIC,
 CURRENCY_CODE               VARCHAR(3) NOT NULL,
 ESTIMATED_PROCESSED_AMOUNT  NUMERIC(15,2),
 IS_VOUCHER                  NUMERIC(1)
);

create table app.PAYMENT_BY_BANK_WIRE
(PAYMENT_ID             SERIAL PRIMARY KEY,
 BASKET_ID              NUMERIC NOT NULL,
 CONFIRMATION_CODE      VARCHAR(60),
 NOTES                  VARCHAR(300),
 CREATED_BY             VARCHAR(50),
 CREATE_DATE            DATE,
 CHANGED_BY             VARCHAR(50),
 CHANGE_DATE            DATE,
 BN_EFFECTIVE_AMOUNT    NUMERIC,
 IS_CREDIT_BY_CHECK     NUMERIC(1) NOT NULL,
 BANK_NAME              VARCHAR(100),
 BANK_STREET_1          VARCHAR(100),
 BANK_STREET_2          VARCHAR(100),
 BANK_CITY              VARCHAR(100),
 BANK_STATE             VARCHAR(50),
 BANK_ZIP               VARCHAR(20),
 BANK_COUNTRY           VARCHAR(50),
 BANK_PHONE             VARCHAR(50),
 ACCOUNT_NAME           VARCHAR(100),
 ACCOUNT_NUMERIC         VARCHAR(100),
 ABA_NUMERIC             VARCHAR(100),
 WIRE_NOTES             VARCHAR(2000)
);

create table app.PAYMENT_BY_CC
(PAYMENT_ID                     SERIAL PRIMARY KEY,
 BASKET_ID                      NUMERIC NOT NULL,
 CC_NUMERIC                     VARCHAR(24),
 CC_TYPE                        VARCHAR(50) NOT NULL,
 CC_EXPIRATION_YEAR             NUMERIC(4),
 CC_EXPIRATION_MONTH            NUMERIC(2),
 CC_NUMERIC_LAST_4              VARCHAR(4),
 CC_ENCRYPTED                   BYTEA,
 CC_ENCRYPTION_DATE             DATE,
 CC_FIRST_4_DIGEST              VARCHAR(32),
 CC_DIGEST                      VARCHAR(32),
 CID_NUMERIC                    VARCHAR(4),
 CID_ENCRYPTED                  BYTEA,
 CID_ENCRYPTION_DATE            DATE,
 CC_SECURITY_TYPE               VARCHAR(32),
 CC_SECURITY_STATUS             VARCHAR(64),
 CC_SECURITY_STATUS_DATE        DATE,
 CC_BRAND                       VARCHAR(40),
 CC_SECURITY_TXN_STATUS         VARCHAR(64),
 CC_SECURITY_TXN_STATUS_DATE    DATE,
 CC_FIRST_6_DIGEST              VARCHAR(32),
 CC_TOKEN                       BYTEA,
 CC_TOKEN_STATUS                VARCHAR(50),
 CC_TOKEN_STATUS_DATE           DATE,
 PAYMENT_SOURCE                 VARCHAR(50),
 PAYMENT_REQUEST_ID             VARCHAR(50)
);

create table app.PAYMENT_METHOD_TYPE
(PAYMENT_METHOD     VARCHAR(24) NOT NULL,
 DESCRIPTION        VARCHAR(200) NOT NULL,
 CREATED_BY         VARCHAR(50),
 CREATE_DATE        DATE,
 CHANGED_BY         VARCHAR(50),
 CHANGE_DATE        DATE
);

create table app.PAYMENT_STATUS_TYPE
(PAYMENT_STATUS   VARCHAR(50) NOT NULL,
 DESCRIPTION      VARCHAR(200) NOT NULL,
 CREATED_BY       VARCHAR(50),
 CREATE_DATE      DATE,
 CHANGED_BY       VARCHAR(50),
 CHANGE_DATE      DATE
);

create table app.PROMOTION_CODE_CATEGORY
(PROMOTION_CODE_CATEGORY  VARCHAR(40) NOT NULL,
 DESCRIPTION              VARCHAR(200),
 CREATED_BY               VARCHAR(50) NOT NULL,
 CREATE_DATE              DATE NOT NULL,
 CHANGED_BY               VARCHAR(50) NOT NULL,
 CHANGE_DATE              DATE NOT NULL
);

create table app.RETURN_STATUS
(RETURN_STATUS          VARCHAR(50) NOT NULL,
 DESCRIPTION            VARCHAR(200),
 CREATED_BY             VARCHAR(50),
 CREATE_DATE            DATE,
 CHANGED_BY             VARCHAR(50),
 CHANGE_DATE            DATE,
 DISPLAY_RETURN_STATUS  VARCHAR(50)
);

create table app.TRANSACTION_ADJUSTMENT
(TRANSACTION_ADJUSTMENT_ID    SERIAL PRIMARY KEY,
 BASKET_ID                    NUMERIC NOT NULL,
 ADJUSTMENT_TYPE              VARCHAR(40) NOT NULL,
 ADJUSTMENT_REASON            VARCHAR(40) NOT NULL,
 PAYMENT_ID                   NUMERIC,
 RMA_NUMERIC                   NUMERIC,
 RECEIVABLE_TRANSACTION_DATE  DATE,
 ADJUSTMENT_NOTE              VARCHAR(500),
 ADJUSTMENT_STATUS            VARCHAR(20),
 ADJUSTMENT_STATUS_DATE       DATE,
 ADJUSTMENT_STATUS_NOTE       VARCHAR(500),
 ADJUSTMENT_STATUS_USERNAME   VARCHAR(50),
 CREATE_DATE                  DATE,
 CREATED_BY                   VARCHAR(50),
 CHANGE_DATE                  DATE,
 CHANGED_BY                   VARCHAR(50),
 ADJUSTMENT_EMAIL             VARCHAR(50),
 GIFT_CERT_ID                 VARCHAR(25)
);

create table app.TRANSACTION_ADJUSTMENT_EVENT
(BASKET_ID                   NUMERIC NOT NULL,
 TRANSACTION_ADJUSTMENT_ID   NUMERIC NOT NULL,
 EVENT_TYPE                  VARCHAR(60),
 EVENT_NOTE                  VARCHAR(500),
 CREATE_DATE                 DATE,
 CREATED_BY                  VARCHAR(50)
);

create table app.USERS
(USERNAME                   VARCHAR(50) NOT NULL,
 FIRST_NAME                 VARCHAR(50) NOT NULL,
 LAST_NAME                  VARCHAR(50) NOT NULL,
 EMAIL_ADDRESS              VARCHAR(200) NOT NULL,
 PASSWORD                   VARCHAR(20),
 USER_ID                    NUMERIC NOT NULL,
 CREATED_BY                 VARCHAR(50),
 CREATE_DATE                DATE,
 CHANGED_BY                 VARCHAR(50),
 CHANGE_DATE                DATE,
 IS_ACTIVE                  NUMERIC(1),
 PASSWORD_DIGEST            VARCHAR(200),
 BUSINESS_AREA_NAME         VARCHAR(50),
 MANAGER_NAME               VARCHAR(50),
 APPRAISAL_PRINTER_NAME     VARCHAR(200),
 SHORETEL_AGENT_NUMERIC      VARCHAR(200),
 VISNETIC_AGENT_ID          VARCHAR(100),
 ORGANIZATION_UNIT_ID       NUMERIC
);

create table app.ZIP_CODE
(ZIP_CODE                    VARCHAR(5) NOT NULL,
 CITY_NAME                   VARCHAR(35),
 STATE_CODE                  VARCHAR(2),
 COUNTY_NAME                 VARCHAR(45),
 PHONE_AREA_CODE_LIST        VARCHAR(55),
 LATITUDE                    NUMERIC,
 LONGITUDE                   NUMERIC,
 TIME_ZONE_CODE              VARCHAR(2),
 COUNTY_ELEVATION_FEET_AVG   NUMERIC,
 COUNTY_FIPS_CODE            VARCHAR(3),
 DAYLIGHT_SAVING_FLAG        VARCHAR(1),
 PREFERRED_LAST_LINE_KEY     VARCHAR(10),
 CLASSIFICATION_CODE         VARCHAR(1),
 MULTI_COUNTY_FLAG           VARCHAR(1),
 FEDEX_HUB_CODE              VARCHAR(100)
);

create table app.CATEGORY
(CATEGORY_ID       NUMERIC NOT NULL,
 NAME              VARCHAR(200) NOT NULL,
 NAME_PLAINTEXT    VARCHAR(200) NOT NULL,
 PLURAL_NAME       VARCHAR(200) NOT NULL,
 SORT_SEQ          NUMERIC(4),
 DESCRIPTION       VARCHAR(450),
 KEYWORDS          VARCHAR(200),
 PRICE_BREAK_LOW   NUMERIC(15),
 PRICE_BREAK_HIGH  NUMERIC(15),
 CATEGORY_TYPE     VARCHAR(100) NOT NULL,
 FILTER_NAME       VARCHAR(60),
 CREATED_BY        VARCHAR(50) NOT NULL,
 CREATE_DATE       DATE NOT NULL,
 CHANGED_BY        VARCHAR(50) NOT NULL,
 CHANGE_DATE       DATE NOT NULL
);

create table app.CATEGORY_OFFER
(CATEGORY_ID   NUMERIC NOT NULL,
 OFFER_ID      NUMERIC NOT NULL,
 SORT_SEQ      NUMERIC,
 IS_DEFAULT    NUMERIC(1) NOT NULL,
 CREATED_BY    VARCHAR(50) NOT NULL,
 CREATE_DATE   DATE NOT NULL,
 CHANGED_BY    VARCHAR(50) NOT NULL,
 CHANGE_DATE   DATE NOT NULL
);

create table app.CATEGORY_TYPE
(CATEGORY_TYPE  VARCHAR(100) NOT NULL,
 DESCRIPTION    VARCHAR(200),
 CREATED_BY     VARCHAR(50) NOT NULL,
 CREATE_DATE    DATE NOT NULL,
 CHANGED_BY     VARCHAR(50) NOT NULL,
 CHANGE_DATE    DATE NOT NULL
);

create table app.CURRENT_INVENTORY
(SKU                          VARCHAR(50) NOT NULL,
 AVAILABLE_QUANTITY           NUMERIC,
 ON_HAND_QUANTITY             NUMERIC,
 JOEI_PROMISE_QUANTITY        NUMERIC,
 JOEI_DEMAND_QUANTITY         NUMERIC,
 APPS_DEMAND_QUANTITY         NUMERIC,
 PURCHASE_SUPPLY_QUANTITY     NUMERIC,
 OPERATING_UNIT_ID            NUMERIC,
 CHANGE_DATE                  DATE,
 VENDOR_LOCATION_ID           NUMERIC(10) NOT NULL
);

create table app.DIAMOND
(SKU                          VARCHAR(12) NOT NULL,
 SHAPE                        VARCHAR(50),
 CARAT                        NUMERIC(19,4),
 CUT                          VARCHAR(50),
 COLOR                        VARCHAR(10),
 CLARITY                      VARCHAR(50),
 VENDOR_PRICE                 NUMERIC,
 DEPTH_PERCENT                NUMERIC(19,4),
 TABLE_PERCENT                NUMERIC(19,4),
 SYMMETRY                     VARCHAR(60),
 POLISH                       VARCHAR(60),
 LENGTH                       NUMERIC,
 WIDTH                        NUMERIC,
 HEIGHT                       NUMERIC,
 GIRDLE_SIZE_MIN              VARCHAR(30),
 GIRDLE_SIZE_MAX              VARCHAR(30),
 GIRDLE_FACET                 VARCHAR(20),
 CULET                        VARCHAR(60),
 FLUORESCENCE                 VARCHAR(60),
 CERT_ID                      VARCHAR(22),
 CERT_LAB                     VARCHAR(15),
 CERT_FILE                    VARCHAR(100),
 COMMENT_TEXT                 VARCHAR(2000),
 IMP_LOG_ID                   NUMERIC(10),
 OWNED_BY_VENDOR_ID           NUMERIC(10),
 PURCHASED_FROM_VENDOR_ID     NUMERIC(10),
 PURCHASE_DATE                DATE,
 MEMO_TO_VENDOR_ID            NUMERIC(10),
 VENDOR_SKU                   VARCHAR(30),
 VENDOR_ON_MEMO               VARCHAR(3),
 PROMISED_BASKET_ID           NUMERIC,
 SHIPS_IN_DAYS                NUMERIC(2),
 ORACLE_APPS_STATUS           VARCHAR(30),
 DISPLAY                      VARCHAR(20) NOT NULL,
 STATUS                       VARCHAR(20),
 PENDING_IMPORT_LOG_ID        NUMERIC,
 CREATED_BY                   VARCHAR(50),
 CREATE_DATE                  DATE,
 CHANGED_BY                   VARCHAR(50),
 CHANGE_DATE                  DATE,
 BRAND                        VARCHAR(60),
 CROWN                        NUMERIC(10,2),
 PAVILLION                    NUMERIC(10,2),
 CERT_FILE_ZOOM               VARCHAR(100),
 CERT_CUT                     VARCHAR(50),
 MERCH_SKU                    NUMERIC,
 MERCH_CATEGORY_CODE          VARCHAR(1),
 BACK_OF_RAP_PERCENT          NUMERIC,
 MERCH_PRICING_QUARTILE       NUMERIC,
 VENDOR_PRICE_OVERRIDE_MODE   VARCHAR(20),
 VENDOR_LOCATION_ID           NUMERIC,
 COUNTRY_OF_ORIGIN            VARCHAR(40),
 SUPPLIED_VENDOR_PRICE        NUMERIC,
 FANCY_COLOR_CODE             VARCHAR(20),
 FANCY_COLOR_DESCRIPTION      VARCHAR(100),
 FANCY_BASE_COLOR             VARCHAR(20),
 CERT_FILE_RAW                VARCHAR(100),
 FANCY_COLOR_ORIGIN           VARCHAR(60),
 FANCY_COLOR_INTENSITY        VARCHAR(10),
 FANCY_COLOR_OVERTONE1        VARCHAR(10),
 FANCY_COLOR_OVERTONE2        VARCHAR(10),
 FANCY_COLOR_OVERTONE3        VARCHAR(10),
 FANCY_COLOR_DISTRIBUTION     VARCHAR(60),
 MILKY                        VARCHAR(10),
 EYE_CLEAN                    VARCHAR(10),
 CROWN_ANGLE                  NUMERIC(5,2),
 CROWN_HEIGHT                 NUMERIC(5,2),
 PAVILLION_ANGLE              NUMERIC(5,2),
 PAVILLION_DEPTH              NUMERIC(5,2),
 STAR_LENGTH                  NUMERIC(5,2),
 INSCRIPTION                  VARCHAR(30),
 LOWER_HALF                   NUMERIC(5,2),
 IMAGE_URL                    VARCHAR(1000),
 COUNTRY_OF_MFG               VARCHAR(40)
);

create table app.DIAMOND_CLARITY
(CLARITY              VARCHAR(50) NOT NULL,
 DESCRIPTION          VARCHAR(150),
 SORT_ORDER           NUMERIC NOT NULL,
 CLARITY_VALUE        NUMERIC(15),
 ALLOW_IMPORT         VARCHAR(4),
 SEARCH_WEIGHT        NUMERIC,
 CREATED_BY           VARCHAR(50),
 CREATE_DATE          DATE,
 CHANGED_BY           VARCHAR(50),
 CHANGE_DATE          DATE,
 CLARITY_ID           NUMERIC
);

create table app.DIAMOND_COLOR
(COLOR              VARCHAR(10) NOT NULL,
 DESCRIPTION        VARCHAR(100),
 SEARCH_WEIGHT      NUMERIC,
 CREATED_BY         VARCHAR(50),
 CREATE_DATE        DATE,
 CHANGED_BY         VARCHAR(50),
 CHANGE_DATE        DATE
);

create table app.DIAMOND_CULET
(CULET          VARCHAR(60) NOT NULL,
 DESCRIPTION    VARCHAR(100),
 SORT_ORDER     NUMERIC,
 CREATED_BY     VARCHAR(50),
 CREATE_DATE    DATE,
 CHANGED_BY     VARCHAR(50),
 CHANGE_DATE    DATE
);

create table app.DIAMOND_CUT
(CUT             VARCHAR(50) NOT NULL,
 DESCRIPTION     VARCHAR(150),
 SORT_ORDER      NUMERIC NOT NULL,
 SEARCH_WEIGHT   NUMERIC,
 CREATED_BY      VARCHAR(50),
 CREATE_DATE     DATE,
 CHANGED_BY      VARCHAR(50),
 CHANGE_DATE     DATE
);

create table app.DIAMOND_CUT_PARAMETER
(SHAPE         VARCHAR(50) NOT NULL,
 CUT           VARCHAR(50) NOT NULL,
 SORT_ORDER    NUMERIC(10) NOT NULL,
 DEPTH_MIN     NUMERIC(6,2),
 DEPTH_MAX     NUMERIC(6,2),
 TABLE_MIN     NUMERIC(6,2),
 TABLE_MAX     NUMERIC(6,2),
 CREATED_BY    VARCHAR(50),
 CREATE_DATE   DATE,
 CHANGED_BY    VARCHAR(50),
 CHANGE_DATE   DATE
);

create table app.DIAMOND_EVENT
(SKU                VARCHAR(12),
 CHANGE             VARCHAR(50),
 USER_NAME          VARCHAR(50),
 NOTE               VARCHAR(512),
 CREATE_DATE        DATE,
 SITE               VARCHAR(20)
);

create table app.DIAMOND_FLUORESCENCE
(FLUORESCENCE          VARCHAR(60) NOT NULL,
 DESCRIPTION           VARCHAR(100),
 SORT_ORDER            NUMERIC,
 CREATED_BY            VARCHAR(50),
 CREATE_DATE           DATE,
 CHANGED_BY            VARCHAR(50),
 CHANGE_DATE           DATE,
 PRICING_GROUP_ID      NUMERIC(2)
);

create table app.DIAMOND_IMAGE
(SKU                 VARCHAR(25),
 IMAGE_TYPE          VARCHAR(25),
 FILENAME            VARCHAR(255),
 CONFIRMED           VARCHAR(1),
 CREATED_BY          VARCHAR(50),
 CREATED_DATE        DATE,
 LAST_UPDATED_BY     VARCHAR(50),
 LAST_UPDATED_DATE   DATE
);

create table app.DIAMOND_POLISH
(POLISH         VARCHAR(60) NOT NULL,
 DESCRIPTION    VARCHAR(100),
 SORT_ORDER     NUMERIC,
 CREATED_BY     VARCHAR(50),
 CREATE_DATE    DATE,
 CHANGED_BY     VARCHAR(50),
 CHANGE_DATE    DATE
);

create table app.DIAMOND_PRICE_HISTORY
(PRICE_DETAIL_ID                 NUMERIC NOT NULL,
 SKU                             VARCHAR(12),
 PRICE                           NUMERIC(20,8),
 TRANSACTIONAL_CURRENCY_CODE     VARCHAR(3),
 PRICE_OVERRIDE_MODE             VARCHAR(20),
 PRICE_USD                       NUMERIC(20,8),
 PROMISED_BASKET_ID              NUMERIC,
 DIAMOND_STATUS                  VARCHAR(20),
 VENDOR_PRICE_OVERRIDE_MODE      VARCHAR(20),
 PRICE_APPLY_STATUS              VARCHAR(20),
 MARGIN                          NUMERIC(20,8),
 PRICE_MODEL_ID                  NUMERIC(20,8),
 PRICE_SET_ID                    NUMERIC(20,8),
 PRICE_MODEL_PRICE_USD           NUMERIC(20,8),
 PRICE_MODEL_MARGIN              NUMERIC(20,8),
 CURRENCY_CONVERSION_RATE        NUMERIC(20,8),
 COST_FROM_VENDOR_USD            NUMERIC(20,8),
 COST_VENDOR_DISCOUNT            NUMERIC(20,8),
 COST_FINAL_VENDOR_PRICE_USD     NUMERIC(20,8),
 BACK_OF_RAP_PCT                 NUMERIC(20,8),
 MARKUP_MODEL_SLOPE              NUMERIC(20,8),
 MARKUP_MODEL_MIN                NUMERIC(20,8),
 MARKUP_MODEL_MAX                NUMERIC(20,8),
 MARKUP_VENDOR_PREMIUM           NUMERIC(20,8),
 MARKUP_DIAMOND_TILT             NUMERIC(20,8),
 MARKUP_STONE_SPECIFIC           NUMERIC(20,8),
 MARKUP_BN_FINAL_PCT             NUMERIC(20,8),
 MARKUP_BN_FINAL_MULT            NUMERIC(20,8),
 MARGIN_VARIANCE_MIN_PCT         NUMERIC(20,8),
 MARGIN_VARIANCE_MIN_MULT        NUMERIC(20,8),
 MARGIN_VARIANCE_MAX_PCT         NUMERIC(20,8),
 MARGIN_VARIANCE_MAX_MULT        NUMERIC(20,8),
 DATE_ACTIVE                     DATE,
 PRICE_CHANGE_TRIGGER            VARCHAR(50),
 PRICE_RUN_ID                    NUMERIC,
 PRICE_RUN_GENERATOR             VARCHAR(50),
 PRICE_RUN_TYPE                  VARCHAR(50),
 CREATED_BY                      VARCHAR(50) NOT NULL,
 CREATE_DATE                     DATE NOT NULL
);

create table app.DIAMOND_SYMMETRY
(SYMMETRY            VARCHAR(60) NOT NULL,
 DESCRIPTION         VARCHAR(100),
 SORT_ORDER          NUMERIC,
 CREATED_BY          VARCHAR(50),
 CREATE_DATE         DATE,
 CHANGED_BY          VARCHAR(50),
 CHANGE_DATE         DATE
);

create table app.DIAMOND_VISUALIZATION
(ID               SERIAL PRIMARY KEY,
 SKU              VARCHAR(12) NOT NULL,
 SARINE_ID        VARCHAR(50),
 CREATED_BY       VARCHAR(50),
 CREATE_DATE      DATE,
 CHANGED_BY       VARCHAR(50),
 CHANGE_DATE      DATE
);

create table app.EVENT
(EVENT_ID        SERIAL PRIMARY KEY, 
 IS_ENABLED      NUMERIC(1) NOT NULL,
 NAME            VARCHAR(100) NOT NULL,
 START_DATE      DATE NOT NULL,
 END_DATE        DATE,
 PRODUCT_SET     VARCHAR(20),
 COUNTRY_CODE    VARCHAR(3),
 CREATED_BY      VARCHAR(50) NOT NULL,
 CREATE_DATE     DATE NOT NULL,
 CHANGED_BY      VARCHAR(50) NOT NULL,
 CHANGE_DATE     DATE NOT NULL,
 IS_CONTAINED    VARCHAR(1)
);

create table app.METAL_CONTENT
(METAL_CONTENT_ID              SERIAL PRIMARY KEY,
 METAL_NAME                    VARCHAR(20) NOT NULL,
 METAL_COLOR                   VARCHAR(20),
 METAL_PURITY                  VARCHAR(20),
 IS_CAN_USE_POLISHING_CLOTH    NUMERIC(1) NOT NULL,
 CREATED_BY                    VARCHAR(50) NOT NULL,
 CREATE_DATE                   DATE NOT NULL,
 CHANGED_BY                    VARCHAR(50) NOT NULL,
 CHANGE_DATE                   DATE NOT NULL,
 GERS_PLANNING_CODE            VARCHAR(6),
 HARMONIZED_CODE_RANKING       NUMERIC,
 HARMONIZED_CODE_SHORT_CODE    VARCHAR(10)
);

create table app.MOUNTING_STYLE
(MOUNTING_STYLE       VARCHAR(50) NOT NULL,
 DESCRIPTION          VARCHAR(200),
 CREATED_BY           VARCHAR(50),
 CREATE_DATE          DATE,
 CHANGED_BY           VARCHAR(50),
 CHANGE_DATE          DATE
);

create table app.OFFER
(OFFER_ID                   SERIAL PRIMARY KEY,
 OFFER_DISPLAY_TYPE         VARCHAR(40),
 NAME                       VARCHAR(200) NOT NULL,
 NAME_PLAINTEXT             VARCHAR(200) NOT NULL,
 DESCRIPTION                VARCHAR(485),
 DESCRIPTION_PLAINTEXT      VARCHAR(400),
 IS_DISPLAY_FEEDBACK        NUMERIC(1) NOT NULL,
 INTERNAL_NOTE              VARCHAR(2416),
 INTERNAL_PICTURE_FILE      VARCHAR(100),
 CREATED_BY                 VARCHAR(50) NOT NULL,
 CREATE_DATE                DATE NOT NULL,
 CHANGED_BY                 VARCHAR(50) NOT NULL,
 CHANGE_DATE                DATE NOT NULL,
 TARGET_GENDER              VARCHAR(20),
 STYLE_NAME                 VARCHAR(100),
 SHORT_NAME_PLAINTEXT       VARCHAR(60),
 IS_FRAUD_RISK              NUMERIC(1) NOT NULL,
 SEO_URL                    VARCHAR(400),
 IMAGE_SET_NAME             VARCHAR(100),
 SELL_WITHOUT_DIAMOND       NUMERIC(1),
 CERTIFICATE_LAB            VARCHAR(15),
 IS_VARIABLE_PRICE          NUMERIC(1) NOT NULL,
 CARAT_VARIANCE_REASON      VARCHAR(50)
);

create table app.OFFER_PICTURE
(OFFER_ID               NUMERIC NOT NULL,
 PICTURE_SET            VARCHAR(30) NOT NULL,
 PICTURE_TYPE           VARCHAR(20) NOT NULL,
 PICTURE_FILE_RELATIVE  VARCHAR(400),
 HEIGHT_PIXELS          NUMERIC,
 WIDTH_PIXELS           NUMERIC,
 CREATED_BY             VARCHAR(50) NOT NULL,
 CREATE_DATE            DATE NOT NULL,
 CHANGED_BY             VARCHAR(50) NOT NULL,
 CHANGE_DATE            DATE NOT NULL
);

create table app.OFFER_PRODUCT
(OFFER_ID          NUMERIC NOT NULL,
 SKU               VARCHAR(40) NOT NULL,
 CREATED_BY        VARCHAR(50) NOT NULL,
 CREATE_DATE       DATE NOT NULL,
 CHANGED_BY        VARCHAR(50) NOT NULL,
 CHANGE_DATE       DATE NOT NULL
);

create table app.OFFER_STYLE
(STYLE_NAME       VARCHAR(100) NOT NULL,
 DESCRIPTION      VARCHAR(200),
 CREATED_BY       VARCHAR(50) NOT NULL,
 CREATE_DATE      DATE NOT NULL,
 CHANGED_BY       VARCHAR(50) NOT NULL,
 CHANGE_DATE      DATE NOT NULL
);

create table app.PAGE
(PAGE_ID                        VARCHAR(200) NOT NULL,
 URL                            VARCHAR(500) NOT NULL,
 CREATED_BY                     VARCHAR(50) NOT NULL,
 CREATE_DATE                    DATE NOT NULL,
 CHANGED_BY                     VARCHAR(50) NOT NULL,
 CHANGE_DATE                    DATE NOT NULL,
 DESCRIPTION                    VARCHAR(500),
 PAGE_TYPE                      VARCHAR(50),
 IS_SECURE                      NUMERIC(1),
 IS_RESPONSIVE                  NUMERIC(1),
 SERVE_RESPONSIVE_TO_DESKTOP    NUMERIC(1),
 SERVE_RESPONSIVE_TO_NON_ENG    NUMERIC(1),
 SERVE_RESPONSIVE_TO_TABLET     NUMERIC(1) NOT NULL,
 PAGE_GROUP                     VARCHAR(50),
 SERVE_RESPONSIVE_TO_PHONE      NUMERIC(1)
);

create table app.PAGE_FORWARD
(PAGE_FORWARD_ID    SERIAL PRIMARY KEY,
 PAGE_ID            VARCHAR(500) NOT NULL,
 URL                VARCHAR(500) NOT NULL,
 CREATED_BY         VARCHAR(50) NOT NULL,
 CREATE_DATE        DATE,
 CHANGED_BY         VARCHAR(50) NOT NULL,
 CHANGE_DATE        DATE NOT NULL
);

create table app.PAGE_FORWARD_PARAMETER
(PAGE_FORWARD_ID       NUMERIC NOT NULL,
 PARAMETER_NAME        VARCHAR(50) NOT NULL,
 PARAMETER_VALUE       VARCHAR(500) NOT NULL,
 CREATED_BY            VARCHAR(50) NOT NULL,
 CREATE_DATE           DATE NOT NULL,
 CHANGED_BY            VARCHAR(50) NOT NULL,
 CHANGE_DATE           DATE
);

create table app.PAGE_REDIRECT
(PAGE_REDIRECT_ID    SERIAL PRIMARY KEY, 
 REDIRECT_TYPE       VARCHAR(25) NOT NULL,
 URL                 VARCHAR(500) NOT NULL,
 PAGE_ID             VARCHAR(500) NOT NULL,
 PRODUCT_SET         VARCHAR(20) NOT NULL,
 IS_ACTIVE           NUMERIC(1) NOT NULL,
 CREATED_BY          VARCHAR(50) NOT NULL,
 CREATE_DATE         DATE NOT NULL,
 CHANGED_BY          VARCHAR(50) NOT NULL,
 CHANGE_DATE         DATE NOT NULL
);

create table app.PAGE_REDIRECT_PARAMETER
(PAGE_REDIRECT_ID    NUMERIC NOT NULL,
 PARAMETER_NAME      VARCHAR(50) NOT NULL,
 PARAMETER_VALUE     VARCHAR(500) NOT NULL,
 CREATED_BY          VARCHAR(50) NOT NULL,
 CREATE_DATE         DATE NOT NULL,
 CHANGED_BY          VARCHAR(50) NOT NULL,
 CHANGE_DATE         DATE NOT NULL
);

create table app.PHONE_NUMERIC
(PHONE_NUMERIC_ID        SERIAL PRIMARY KEY,
 PHONE_NUMERIC_PREFIX    VARCHAR(30),
 PHONE_NUMERIC           VARCHAR(30) NOT NULL,
 PHONE_NUMERIC_TYPE      VARCHAR(50) NOT NULL,
 CREATED_BY             VARCHAR(50) NOT NULL,
 CREATE_DATE            DATE NOT NULL,
 CHANGED_BY             VARCHAR(50) NOT NULL,
 CHANGE_DATE            DATE NOT NULL
);

create table app.PHONE_NUMERIC_TYPE
(PHONE_NUMERIC_TYPE     VARCHAR(50) NOT NULL,
 CREATED_BY            VARCHAR(50) NOT NULL,
 CREATE_DATE           DATE NOT NULL,
 CHANGED_BY            VARCHAR(50) NOT NULL,
 CHANGE_DATE           DATE NOT NULL
);

create table app.PRODUCT
(SKU                              VARCHAR(40) NOT NULL,
 PRODUCT_TYPE                     VARCHAR(40) NOT NULL,
 INTERNAL_NAME                    VARCHAR(100),
 IS_SPECIAL_ORDER                 NUMERIC(1) NOT NULL,
 IS_PRICE_CALCULATED              NUMERIC(1) NOT NULL,
 IS_PRICE_SET_BY_USER             NUMERIC(1) NOT NULL,
 BRAND                            VARCHAR(50),
 ENGRAVE_IS_MONOGRAMMABLE         NUMERIC(1) NOT NULL,
 ENGRAVE_MAX_LINES                NUMERIC NOT NULL,
 ENGRAVE_MAX_CHARACTERS           NUMERIC NOT NULL,
 ORACLE_APPS_CATEGORY_MATERIAL    VARCHAR(50),
 ORACLE_APPS_CATEGORY_PRODUCT     VARCHAR(50),
 ORACLE_APPS_TEMPLATE             VARCHAR(35),
 MEASUREMENT_UNITS                VARCHAR(20),
 HEIGHT                           VARCHAR(20),
 WIDTH                            VARCHAR(20),
 DIAMETER                         VARCHAR(20),
 LENGTH                           VARCHAR(20),
 CHAIN_LENGTH_INCHES              NUMERIC,
 RING_SHANK_THICKNESS_MM          NUMERIC,
 SERIES                           VARCHAR(128),
 MODEL                            VARCHAR(50),
 UPC_CODE                         NUMERIC,
 CLASP_TYPE                       VARCHAR(60),
 CHAIN_TYPE                       VARCHAR(60),
 PRONG_COUNT                      NUMERIC,
 RING_STOCK_RING_SIZE             NUMERIC,
 RING_MIN_RING_SIZE               NUMERIC,
 RING_MAX_RING_SIZE               NUMERIC,
 RING_IS_COMFORT_FIT              NUMERIC(1) NOT NULL,
 RING_HEAD_TYPE                   VARCHAR(60),
 CREATED_BY                       VARCHAR(50) NOT NULL,
 CREATE_DATE                      DATE NOT NULL,
 CHANGED_BY                       VARCHAR(50) NOT NULL,
 CHANGE_DATE                      DATE NOT NULL,
 MOUNTING_STYLE                   VARCHAR(50),
 IS_RHODIUM_COATED                NUMERIC(1) NOT NULL,
 HEAD_COUNT                       NUMERIC,
 SHIPPING_WEIGHT_OZ               NUMERIC(15,2),
 GRAM_WEIGHT                      NUMERIC,
 CHAIN_WIDTH_MM                   NUMERIC,
 ENGRAVE_TEMPLATE_NAME            VARCHAR(50),
 ENGRAVE_AREA_HEIGHT_INT          NUMERIC,
 ENGRAVE_AREA_HEIGHT_EXT          NUMERIC,
 ENGRAVE_AREA_DIAMETER_INT        NUMERIC,
 ENGRAVE_AREA_DIAMETER_EXT        NUMERIC,
 ENGRAVE_MACHINE_TYPE             VARCHAR(25),
 ENGRAVE_FIXTURE                  VARCHAR(30),
 ORACLE_APPS_MERCH_CATEGORY       VARCHAR(50),
 PLANNER_USER_CODE                VARCHAR(10),
 RHODIUM_COLOR                    VARCHAR(25),
 MERCH_STYLE_CATEGORY             VARCHAR(40),
 STORAGE_DEPTH_INCHES             NUMERIC,
 RING_RESIZE_MIN_SIZE             NUMERIC,
 RING_RESIZE_MAX_SIZE             NUMERIC,
 FULFILLMENT_METHOD               VARCHAR(50)
);

create table app.PRODUCT_COMBINATION
(PARENT_SKU                VARCHAR(40) NOT NULL,
 CHILD_SKU                 VARCHAR(40) NOT NULL,
 PRODUCT_COMBINATION_TYPE  VARCHAR(20) NOT NULL,
 CREATED_BY                VARCHAR(50) NOT NULL,
 CREATE_DATE               DATE NOT NULL,
 CHANGED_BY                VARCHAR(50) NOT NULL,
 CHANGE_DATE               DATE NOT NULL
);

create table app.PRODUCT_COMBINATION_TYPE
(PRODUCT_COMBINATION_TYPE   VARCHAR(20) NOT NULL,
 DESCRIPTION                VARCHAR(200) NOT NULL,
 CREATED_BY                 VARCHAR(50) NOT NULL,
 CREATE_DATE                DATE NOT NULL,
 CHANGED_BY                 VARCHAR(50) NOT NULL,
 CHANGE_DATE                DATE NOT NULL
);

create table app.PRODUCT_HARMONIZED_CODE
(SKU                VARCHAR(40) NOT NULL,
 COUNTRY_CODE       VARCHAR(3) NOT NULL,
 HARMONIZED_CODE    VARCHAR(40) NOT NULL,
 CREATED_BY         VARCHAR(50) NOT NULL,
 CREATE_DATE        DATE NOT NULL,
 CHANGED_BY         VARCHAR(50) NOT NULL,
 CHANGE_DATE        DATE NOT NULL
);

create table app.PRODUCT_HARMONIZED_CODE_CONFIG
(COUNTRY_CODE       VARCHAR(3) NOT NULL,
 SHORT_CODE         VARCHAR(40) NOT NULL,
 HARMONIZED_CODE    VARCHAR(40) NOT NULL,
 CREATED_BY         VARCHAR(50) NOT NULL,
 CREATE_DATE        DATE NOT NULL,
 CHANGED_BY         VARCHAR(50) NOT NULL,
 CHANGE_DATE        DATE NOT NULL,
 START_DATE         DATE NOT NULL,
 END_DATE           DATE NOT NULL
);

create table app.PRODUCT_INVENTORY
(SKU                             VARCHAR(40) NOT NULL,
 INVENTORY_OPERATING_UNIT        NUMERIC NOT NULL,
 AVAILABLE_TO_SELL               VARCHAR(20) NOT NULL,
 IS_BACKORDERED                  NUMERIC(1) NOT NULL,
 IS_BACKORDERED_DEFAULT          NUMERIC(1) NOT NULL,
 SHIPS_IN_DAYS                   NUMERIC NOT NULL,
 INVENTORY_MIN                   NUMERIC,
 INVENTORY_MAX                   NUMERIC,
 RTI_IS_ENABLED                  NUMERIC(1) NOT NULL,
 RTI_EXPECTED_RECEIPT_DATE       DATE,
 RTI_MIN_QUANTITY                NUMERIC,
 RTI_CHANGED_BY                  VARCHAR(50),
 RTI_CHANGE_DATE                 DATE,
 BACKORDER_WARNING_QUANTITY      NUMERIC,
 IS_QA_INSPECTION_REQUIRED       NUMERIC(1) NOT NULL,
 ORACLE_APPS_SUBINVENTORY_NAME   VARCHAR(20),
 ORACLE_APPS_SYNC_STATUS         VARCHAR(20),
 PRODUCT_CURRENT_STATUS          VARCHAR(50),
 OWNED_BY_VENDOR_ID              NUMERIC(10),
 LOCATED_AT_VENDOR_ID            NUMERIC(10),
 CREATED_BY                      VARCHAR(50) NOT NULL,
 CREATE_DATE                     DATE NOT NULL,
 CHANGED_BY                      VARCHAR(50) NOT NULL,
 CHANGE_DATE                     DATE NOT NULL,
 IS_EXTRAORDINARY                NUMERIC(1),
 VENDOR_LOCATION_ID              NUMERIC(10)
);

create table app.PRODUCT_METAL_CONTENT
(SKU                         VARCHAR(40) NOT NULL,
 METAL_CONTENT_ID            NUMERIC NOT NULL,
 IS_SECONDARY_METAL          NUMERIC(1) NOT NULL,
 METAL_PENNY_WEIGHT          NUMERIC(19,4),
 CREATED_BY                  VARCHAR(50) NOT NULL,
 CREATE_DATE                 DATE NOT NULL,
 CHANGED_BY                  VARCHAR(50) NOT NULL,
 CHANGE_DATE                 DATE NOT NULL,
 IS_IGNORE_FOR_HC_SHORTCODE  NUMERIC(1)
);

create table app.PRODUCT_RING_HEAD_SELECTION
(SKU                       VARCHAR(40) NOT NULL,
 RING_HEAD_TYPE            VARCHAR(60) NOT NULL,
 SELECTION_PRIORITY_SEQ    NUMERIC NOT NULL,
 CREATED_BY                VARCHAR(50) NOT NULL,
 CREATE_DATE               DATE NOT NULL,
 CHANGED_BY                VARCHAR(50) NOT NULL,
 CHANGE_DATE               DATE NOT NULL
);

create table app.PRODUCT_SET_CURRENCY
(PRODUCT_SET          VARCHAR(20) NOT NULL,
 CURRENCY_CODE        VARCHAR(3) NOT NULL,
 IS_ACTIVE            NUMERIC(1) NOT NULL,
 IS_INTERNAL          NUMERIC(1) NOT NULL,
 CREATED_BY           VARCHAR(50) NOT NULL,
 CREATE_DATE          DATE NOT NULL,
 CHANGED_BY           VARCHAR(50) NOT NULL,
 CHANGE_DATE          DATE NOT NULL
);

create table app.PRODUCT_SET_PAGE
(PAGE_ID            VARCHAR(500) NOT NULL,
 PAGE_URL           VARCHAR(500) NOT NULL,
 PRODUCT_SET        VARCHAR(20) NOT NULL,
 IS_ACTIVE          NUMERIC(1) NOT NULL,
 CREATED_BY         VARCHAR(50) NOT NULL,
 CREATE_DATE        DATE NOT NULL,
 CHANGED_BY         VARCHAR(50) NOT NULL,
 CHANGE_DATE        DATE NOT NULL
);

create table app.PRODUCT_SET_SHIP_TO_COUNTRY
(PRODUCT_SET              VARCHAR(20) NOT NULL,
 SHIP_TO_COUNTRY_CODE     VARCHAR(3) NOT NULL,
 IS_ACTIVE                NUMERIC(1) NOT NULL,
 IS_INTERNAL              NUMERIC(1) NOT NULL,
 CREATED_BY               VARCHAR(50) NOT NULL,
 CREATE_DATE              DATE NOT NULL,
 CHANGED_BY               VARCHAR(50) NOT NULL,
 CHANGE_DATE              DATE NOT NULL
);

create table app.PRODUCT_SITE
(SKU                       VARCHAR(40) NOT NULL,
 SITE                      VARCHAR(20) NOT NULL,
 INITIAL_LAUNCH_DATE       DATE,
 SELL_STATUS               VARCHAR(20) NOT NULL,
 CREATED_BY                VARCHAR(50) NOT NULL,
 CREATE_DATE               DATE NOT NULL,
 CHANGED_BY                VARCHAR(50) NOT NULL,
 CHANGE_DATE               DATE NOT NULL,
 ELIGIBLE_TO_SELL          VARCHAR(20),
 TARGET_MARKDOWN_DATE      DATE
);

create table app.PRODUCT_SITE_PRICE
(OFFER_ID                    NUMERIC NOT NULL,
 SKU                         VARCHAR(40) NOT NULL,
 SITE                        VARCHAR(20) NOT NULL,
 PRICE_TYPE                  VARCHAR(20) NOT NULL,
 PRICE                       NUMERIC NOT NULL,
 RETAIL_COMPARISON_PRICE     NUMERIC,
 PRICE_OVERRIDE_MODE         VARCHAR(20),
 CREATED_BY                  VARCHAR(50) NOT NULL,
 CREATE_DATE                 DATE NOT NULL,
 CHANGED_BY                  VARCHAR(50) NOT NULL,
 CHANGE_DATE                 DATE NOT NULL,
 ORIGINAL_PRICE_DETAIL_ID    NUMERIC(20,8),
 TRANSACTIONAL_CURRENCY_CODE VARCHAR(3) NOT NULL,
 LAST_PRICE_DETAIL_ID        NUMERIC(20,8),
 IS_MASTER_BASE_PRICE        NUMERIC NOT NULL
);

create table app.PRODUCT_SITE_PRICE_DETAIL
(PRICE_DETAIL_ID                  SERIAL PRIMARY KEY,
 SKU                              VARCHAR(40) NOT NULL,
 OFFER_ID                         NUMERIC NOT NULL,
 SITE                             VARCHAR(20) NOT NULL,
 TRANSACTIONAL_CURRENCY_CODE      VARCHAR(3) NOT NULL,
 PRICE                            NUMERIC(20,8),
 MARGIN_PCT                       NUMERIC(20,8),
 PRICE_OVERRIDE_MODE              VARCHAR(20),
 PRICE_TYPE                       VARCHAR(20),
 PRODUCT_VENDOR_ID                NUMERIC,
 COST_PRODUCT_CURRENT             NUMERIC(20,8),
 CURRENCY_COST_PRODUCT_CURRENT    VARCHAR(3),
 COST_PRODUCT_ORACLE_AVERAGE      NUMERIC(20,8),
 CURRENCY_COST_ORACLE_AVERAGE     VARCHAR(3),
 BASE_TRANSACTIONAL_CURR_CODE     VARCHAR(3),
 BASE_PRICE                       NUMERIC(20,8),
 BASE_MARGIN_PCT                  NUMERIC(20,8),
 INITIAL_PRICE_USD                NUMERIC(20,8),
 CURRENCY_RATE_BASE_TO_USD        NUMERIC(20,8),
 PRICE_ROUNDING_TIER_USD          NUMERIC(20,8),
 TARGET_PRICE_CONVERTED           NUMERIC(20,8),
 TARGET_PRICE_ROUNDING_TIER       NUMERIC(20,8),
 TARGET_CURRENCY_ROUNDING_SCALE   NUMERIC(20,8),
 CURRENCY_CONVERSION_RATE         NUMERIC(20,8),
 PRICE_RUN_GENERATOR              VARCHAR(50),
 CREATED_BY                       VARCHAR(50) NOT NULL,
 CREATE_DATE                      DATE NOT NULL
);

create table app.PRODUCT_SOURCE
(PRODUCT_SOURCE_ID       SERIAL PRIMARY KEY,
 SKU                     VARCHAR(40) NOT NULL,
 VENDOR_ID               NUMERIC(10) NOT NULL,
 VENDOR_LOCATION_ID      NUMERIC(10) NOT NULL,
 IS_ACTIVE               NUMERIC(1),
 PROCESSING_DAYS         NUMERIC(3) NOT NULL,
 IS_RTI_ENABLED          NUMERIC(1),
 AVAILABLE_TO_SELL       VARCHAR(20) NOT NULL,
 SOURCE_PRIORITY         NUMERIC(3) NOT NULL,
 CREATE_DATE             DATE NOT NULL,
 CREATED_BY              VARCHAR(50) NOT NULL,
 CHANGE_DATE             DATE NOT NULL,
 CHANGED_BY              VARCHAR(50) NOT NULL,
 SOURCE_TYPE             VARCHAR(30)
);

create table app.PRODUCT_STATUS
(PRODUCT_STATUS    VARCHAR(50) NOT NULL,
 DESCRIPTION       VARCHAR(200),
 CREATED_BY        VARCHAR(50),
 CREATE_DATE       DATE,
 CHANGED_BY        VARCHAR(50),
 CHANGE_DATE       DATE,
 SORT_SEQ          NUMERIC NOT NULL
);

create table app.PRODUCT_STONE
(SKU                          VARCHAR(40),
 SHAPE_NAME                   VARCHAR(50),
 STONE_TYPE                   VARCHAR(40),
 SETTING_TYPE                 VARCHAR(35),
 IS_PRIMARY_STONE             NUMERIC(1) NOT NULL,
 QUANTITY                     NUMERIC(10) NOT NULL,
 MIN_COLOR                    VARCHAR(35),
 MAX_COLOR                    VARCHAR(35),
 MIN_CLARITY                  VARCHAR(20),
 MAX_CLARITY                  VARCHAR(20),
 MIN_TOTAL_CARAT_WEIGHT       NUMERIC(19,4),
 LUSTER                       VARCHAR(32),
 UNIFORMITY                   VARCHAR(32),
 SURFACE_MARKINGS             VARCHAR(50),
 MIN_SIZE_MM                  NUMERIC,
 MAX_SIZE_MM                  NUMERIC,
 TREATMENT                    VARCHAR(35),
 COLOR_DESCRIPTION            VARCHAR(64),
 CLARITY_DESCRIPTION          VARCHAR(35),
 DIMENSION_DESCRIPTION        VARCHAR(35),
 CREATED_BY                   VARCHAR(50) NOT NULL,
 CREATE_DATE                  DATE NOT NULL,
 CHANGED_BY                   VARCHAR(50) NOT NULL,
 CHANGE_DATE                  DATE NOT NULL,
 IS_GRADUATED_SIZE            NUMERIC(1) NOT NULL,
 MIN_CUT                      VARCHAR(50),
 MAX_CUT                      VARCHAR(50),
 NACRE_THICKNESS              VARCHAR(50),
 PRODUCT_STONE_ID             NUMERIC,
 IS_IGNORE_FOR_HC_SHORTCODE   NUMERIC(1) NOT NULL
);

create table app.PRODUCT_TYPE
(PRODUCT_TYPE               VARCHAR(40) NOT NULL,
 SHORT_NAME                 VARCHAR(20) NOT NULL,
 DESCRIPTION                VARCHAR(200) NOT NULL,
 IS_REFERRED_TO_AS_PLURAL   NUMERIC(1) NOT NULL,
 CREATED_BY                 VARCHAR(50) NOT NULL,
 CREATE_DATE                DATE NOT NULL,
 CHANGED_BY                 VARCHAR(50) NOT NULL,
 CHANGE_DATE                DATE NOT NULL
);

create table app.PRODUCT_VENDOR
(SKU                             VARCHAR(40) NOT NULL,
 VENDOR_ID                       NUMERIC(10) NOT NULL,
 VENDOR_SKU                      VARCHAR(50),
 VENDOR_PRICE                    NUMERIC,
 COUNTRY_OF_ORIGIN               VARCHAR(40),
 IS_DEFAULT_VENDOR               NUMERIC(1) NOT NULL,
 CREATED_BY                      VARCHAR(50) NOT NULL,
 CREATE_DATE                     DATE NOT NULL,
 CHANGED_BY                      VARCHAR(50) NOT NULL,
 CHANGE_DATE                     DATE NOT NULL,
 COUNTRY_OF_ORGN_CERT_EXP_DATE   DATE,
 IS_EU_TRANSFERABLE              NUMERIC(1) NOT NULL,
 EU_TRANSFER_LEAD_TIME           NUMERIC,
 VENDOR_LEAD_TIME                NUMERIC,
 MIN_ORDER_QUANTITY              NUMERIC
);

create table app.RING_HEAD_TYPE
(RING_HEAD_TYPE      VARCHAR(60) NOT NULL,
 CREATED_BY          VARCHAR(50) NOT NULL,
 CREATE_DATE         DATE NOT NULL,
 CHANGED_BY          VARCHAR(50) NOT NULL,
 CHANGE_DATE         DATE NOT NULL
);

create table app.SETTING_POSITION
(SETTING_POSITION    VARCHAR(50) NOT NULL,
 DESCRIPTION         VARCHAR(150),
 CREATED_BY          VARCHAR(50) NOT NULL,
 CREATE_DATE         DATE NOT NULL,
 CHANGED_BY          VARCHAR(50) NOT NULL,
 CHANGE_DATE         DATE NOT NULL
);

create table app.SHAPE
(SHAPE                VARCHAR(50) NOT NULL,
 DESCRIPTION          VARCHAR(150),
 DISPLAY_SORT_SEQ     NUMERIC(4),
 SELL_DEFAULT         VARCHAR(20),
 CREATED_BY           VARCHAR(50),
 CREATE_DATE          DATE,
 CHANGED_BY           VARCHAR(50),
 CHANGE_DATE          DATE
);

create table app.SHIP_TO_COUNTRY
(COUNTRY_CODE         VARCHAR(3) NOT NULL,
 DEFAULT_LANGUAGE     VARCHAR(50) NOT NULL,
 DEFAULT_CURRENCY     VARCHAR(3) NOT NULL,
 IS_ACTIVE            NUMERIC(1) NOT NULL,
 IS_INTERNAL          NUMERIC(1) NOT NULL,
 CREATED_BY           VARCHAR(50) NOT NULL,
 CREATE_DATE          DATE NOT NULL,
 CHANGED_BY           VARCHAR(50) NOT NULL,
 CHANGE_DATE          DATE NOT NULL,
 DESCRIPTION          VARCHAR(200)
);

create table app.SITE
(SITE                           VARCHAR(20) NOT NULL,
 DESCRIPTION                    VARCHAR(200) NOT NULL,
 OFFER_NAME_MAX_LENGTH          NUMERIC,
 OFFER_DESCRIPTION_MAX_LENGTH   NUMERIC,
 PICTURE_SET                    VARCHAR(30),
 SHIPPING_PACKAGE_SET           VARCHAR(20),
 IS_ACTIVE                      NUMERIC(1) NOT NULL,
 CREATED_BY                     VARCHAR(50),
 CREATE_DATE                    DATE,
 CHANGED_BY                     VARCHAR(50),
 CHANGE_DATE                    DATE,
 FULFILLMENT_OPERATING_UNIT     NUMERIC NOT NULL,
 INVENTORY_OPERATING_UNIT       NUMERIC NOT NULL,
 ADJUSTMENT_AMOUNT              NUMERIC(15,2) NOT NULL,
 ADJUSTMENT_PERCENT             NUMERIC(15,2) NOT NULL
);

create table app.SITE_CURRENCY
(SITE                           VARCHAR(20) NOT NULL,
 TRANSACTIONAL_CURRENCY_CODE    VARCHAR(3) NOT NULL,
 IS_ACTIVE                      NUMERIC(1) NOT NULL,
 IS_INTERNAL                    NUMERIC(1) NOT NULL,
 CREATED_BY                     VARCHAR(50) NOT NULL,
 CREATE_DATE                    DATE NOT NULL,
 CHANGED_BY                     VARCHAR(50) NOT NULL,
 CHANGE_DATE                    DATE NOT NULL
);

create table app.SITE_NAVIGATION_HIERARCHY
(NAVIGATION_NODE_ID          SERIAL PRIMARY KEY,
 PARENT_NAVIGATION_NODE_ID   NUMERIC,
 NAVIGATION_NODE_NAME        VARCHAR(200) NOT NULL,
 LINK_URL                    VARCHAR(500),
 SORT_ORDER                  NUMERIC,
 CREATED_BY                  VARCHAR(60) NOT NULL,
 CREATE_DATE                 DATE NOT NULL,
 CHANGED_BY                  VARCHAR(60) NOT NULL,
 CHANGE_DATE                 DATE NOT NULL
);

create table app.SITE_NAVIGATION_ROOT
(SITE                   VARCHAR(20) NOT NULL,
 NAVIGATION_NODE_ID     NUMERIC NOT NULL,
 SORT_ORDER             NUMERIC,
 CREATED_BY             VARCHAR(60),
 CREATE_DATE            DATE,
 CHANGED_BY             VARCHAR(60),
 CHANGE_DATE            DATE,
 ROOT_LABEL             VARCHAR(150)
);

create table app.STATUS
(STATUS         VARCHAR(20) NOT NULL,
 CREATED_BY     VARCHAR(50),
 CREATE_DATE    DATE,
 CHANGED_BY     VARCHAR(50),
 CHANGE_DATE    DATE
);

create table app.STONE_COMBINATION_CONFIG
(SHAPE                         VARCHAR(2) NOT NULL,
 SITE                          VARCHAR(20) NOT NULL,
 NUM_STONES                    NUMERIC NOT NULL,
 MIN_CARAT_PER_STONE           NUMERIC NOT NULL,
 MAX_CARAT_PER_STONE           NUMERIC NOT NULL,
 PRODUCT_TYPE                  VARCHAR(200) NOT NULL,
 CUT_LIST                      VARCHAR(200) NOT NULL,
 COLOR_LIST                    VARCHAR(200) NOT NULL,
 CLARITY_LIST                  VARCHAR(200) NOT NULL,
 SYMMETRY_EXCLUSION_LIST       VARCHAR(200),
 POLISH_EXCLUSION_LIST         VARCHAR(200),
 CULET_EXCLUSION_LIST          VARCHAR(200),
 FLUORESCENCE_EXCLUSION_LIST   VARCHAR(200),
 GIRDLE_QUALITY                VARCHAR(50),
 MAX_CARAT_VARIATION           NUMERIC NOT NULL,
 MAX_COLOR_VARIATION           NUMERIC NOT NULL,
 MAX_CLARITY_VARIATION         NUMERIC NOT NULL,
 MAX_CUT_VARIATION             NUMERIC NOT NULL,
 MAX_POLISH_VARIATION          NUMERIC NOT NULL,
 MAX_SYMMETRY_VARIATION        NUMERIC NOT NULL,
 MAX_TABLE_PERCENT_VARIATION   NUMERIC NOT NULL,
 MIX_BRANDS                    VARCHAR(10),
 MIX_VENDORS                   VARCHAR(10),
 MAX_SHIPS_IN_DAYS             NUMERIC,
 CREATED_BY                    VARCHAR(50) NOT NULL,
 CREATE_DATE                   DATE NOT NULL,
 CHANGED_BY                    VARCHAR(50) NOT NULL,
 CHANGE_DATE                   DATE NOT NULL,
 MAX_LENGTH_DIFFERENCE_MM      NUMERIC,
 MAX_WIDTH_DIFFERENCE_MM       NUMERIC
);

create table app.STONE_TYPE
(STONE_TYPE                  VARCHAR(40) NOT NULL,
 STONE_CATEGORY              VARCHAR(40) NOT NULL,
 CREATED_BY                  VARCHAR(50) NOT NULL,
 CREATE_DATE                 DATE NOT NULL,
 CHANGED_BY                  VARCHAR(50) NOT NULL,
 CHANGE_DATE                 DATE NOT NULL,
 HARMONIZED_STONE_CATEGORY   VARCHAR(40)
);

create table app.VENDOR
(VENDOR_ID                      SERIAL PRIMARY KEY,
 COMPANY_NAME                   VARCHAR(50),
 LOGIN_ID                       VARCHAR(36),
 CONTACT_FIRST_NAME             VARCHAR(50),
 CONTACT_LAST_NAME              VARCHAR(50),
 CONTACT_TITLE                  VARCHAR(30),
 ADDRESS_1                      VARCHAR(50),
 ADDRESS_2                      VARCHAR(50),
 CITY                           VARCHAR(50),
 STATE                          VARCHAR(20),
 ZIP                            VARCHAR(10),
 COUNTRY                        VARCHAR(50),
 PHONE                          VARCHAR(20),
 FAX                            VARCHAR(20),
 CERTIFICATE_NAMED_BY           VARCHAR(50),
 IS_DIAMOND_VENDOR              NUMERIC(1) NOT NULL,
 IS_JEWELRY_VENDOR              NUMERIC(1) NOT NULL,
 IS_MERCHANDISING_RMS_VENDOR    NUMERIC(1) NOT NULL,
 EMAIL_ADDRESS                  VARCHAR(400),
 IS_WORK_AHEAD_ELIGIBLE         NUMERIC(1) NOT NULL,
 CREATED_BY                     VARCHAR(50) NOT NULL,
 CREATE_DATE                    DATE NOT NULL,
 CHANGED_BY                     VARCHAR(50) NOT NULL,
 CHANGE_DATE                    DATE NOT NULL,
 TIMEZONE_LOCAL_ABBREV          VARCHAR(64),
 IS_ASSCHER_PAIRING_ELIGIBLE    NUMERIC(1) NOT NULL,
 IS_SIGNATURE_VENDOR            NUMERIC(1) NOT NULL,
 IS_CONSIGNMENT_VENDOR          NUMERIC(1) NOT NULL,
 IS_ADVANCED_REPORTING_VENDOR   NUMERIC(1) NOT NULL,
 CURRENCY_CODE                  VARCHAR(3) NOT NULL,
 UTC_OFFSET                     NUMERIC(4,2),
 IS_FULFILLMENT_PARTNER         NUMERIC(1) NOT NULL,
 IS_CANADA_MARK_AUTH            NUMERIC,
 IS_RIO_TINTO_AUTH              NUMERIC
);

create table app.VENDOR_DISCOUNT
(VENDOR_ID         NUMERIC NOT NULL,
 SHAPE             VARCHAR(20) NOT NULL,
 CARAT_MIN         NUMERIC NOT NULL,
 CARAT_MAX         NUMERIC NOT NULL,
 DISCOUNT          NUMERIC NOT NULL,
 CREATED_BY        VARCHAR(50),
 CREATE_DATE       DATE,
 CHANGED_BY        VARCHAR(50),
 CHANGE_DATE       DATE,
 BRAND             VARCHAR(60)
);

create table app.VENDOR_LOCATION
(VENDOR_LOCATION_ID     SERIAL PRIMARY KEY,
 VENDOR_ID              NUMERIC(10) NOT NULL,
 ADDRESS_1              VARCHAR(50),
 ADDRESS_2              VARCHAR(50),
 CITY                   VARCHAR(50),
 STATE                  VARCHAR(20),
 COUNTRY                VARCHAR(50),
 ZIP                    NUMERIC(10),
 UTC_OFFSET             NUMERIC(4,2),
 CREATE_DATE            DATE NOT NULL,
 CREATED_BY             VARCHAR(50) NOT NULL,
 CHANGE_DATE            DATE NOT NULL,
 CHANGED_BY             VARCHAR(50) NOT NULL,
 IS_VODO_LOCATION       NUMERIC(1)
);

create table app.VENDOR_OPEN_HOURS
(VENDOR_ID                 NUMERIC(10),
 DAY_OF_WEEK               VARCHAR(10),
 START_TIME_LOCAL_HHMM     VARCHAR(4),
 END_TIME_LOCAL_HHMM       VARCHAR(4),
 IS_OPEN                   NUMERIC(1) NOT NULL,
 NOTE                      VARCHAR(2000),
 CREATED_BY                VARCHAR(50),
 CREATE_DATE               DATE,
 CHANGED_BY                VARCHAR(50),
 CHANGE_DATE               DATE
);

